SOLID is an acronym for a group of five good principles (rules) in computer programming. 
SOLID allows programmers to write code that is easier to understand and change later on.
Solid is often used with systems that use an object-oriented design.

সলিড হল কম্পিউটার প্রোগ্রামিং-এ পাঁচটি ভাল নীতির (নিয়ম) একটি সংক্ষিপ্ত রূপ। SOLID প্রোগ্রামারদের কোড লিখতে দেয় যা বুঝতে এবং পরে পরিবর্তন করা সহজ। 
সলিড প্রায়ই এমন সিস্টেমের সাথে ব্যবহার করা হয় যা একটি বস্তু-ভিত্তিক নকশা ব্যবহার করে।

1.Single responsibility principle - Class has one job to do. Each change in requirements can be done by changing just one class.
একক দায়িত্ব নীতি - ক্লাসের একটি কাজ আছে। প্রয়োজনীয়তার প্রতিটি পরিবর্তন শুধুমাত্র একটি শ্রেণী পরিবর্তন করে করা যেতে পারে।

2.Open/closed principle - Class is happy (open) to be used by others. Class is not happy (closed) to be changed by others.
খোলা/বন্ধ নীতি - ক্লাস খুশি (খোলা) অন্যদের দ্বারা ব্যবহার করা। ক্লাস খুশি না (বন্ধ) অন্যদের দ্বারা পরিবর্তন করা হবে.

3.Liskov substitution principle - Class can be replaced by any of its children. Children classes inherit parent's behaviours.
Liskov প্রতিস্থাপন নীতি - ক্লাস তার সন্তানদের যে কোনো দ্বারা প্রতিস্থাপিত করা যেতে পারে. বাচ্চাদের ক্লাসগুলি পিতামাতার আচরণের উত্তরাধিকারী হয়।

4.Interface segregation principle - When classes promise each other something, they should separate these promises (interfaces) into many small promises, 
so it's easier to understand.
ইন্টারফেস বিভাজন নীতি - যখন ক্লাসগুলি একে অপরকে কিছু প্রতিশ্রুতি দেয়, তখন তাদের এই প্রতিশ্রুতিগুলিকে (ইন্টারফেসগুলি) অনেকগুলি ছোট প্রতিশ্রুতিতে আলাদা করা উচিত, যাতে এটি বোঝা সহজ হয়।

5.Dependency inversion principle - When classes talk to each other in a very specific way, they both depend on each other to never change.
Instead classes should use promises (interfaces, parents),so classes can change as long as they keep the promise.
নির্ভরতা বিপরীত নীতি - যখন ক্লাসগুলি একে অপরের সাথে খুব নির্দিষ্ট উপায়ে কথা বলে, তারা উভয়ই একে অপরের উপর নির্ভর করে যাতে কখনই পরিবর্তন না হয়। 
পরিবর্তে ক্লাসগুলি প্রতিশ্রুতি (ইন্টারফেস, পিতামাতা) ব্যবহার করা উচিত, তাই যতক্ষণ তারা প্রতিশ্রুতি রাখে ততক্ষণ ক্লাসগুলি পরিবর্তন করতে পারে।


